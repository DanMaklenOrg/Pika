//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from /Users/omarnasr/Documents/Projects/Personal/Pika/PikaLang/PikaLang.g4 by ANTLR 4.13.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace Pika.PikaLang {
using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.2")]
[System.CLSCompliant(false)]
public partial class PikaLangLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		SINGLE_LINE_COMMENT=1, MULTI_LINE_COMMENT=2, WHITESPACE=3, GAME=4, ACHIEVEMENT=5, 
		OBJECTIVE=6, CRITERION=7, CATEGORY=8, DESCRIPTION=9, IMPORT=10, STEAM=11, 
		SEMICOLON=12, OPEN_BRACES=13, CLOSE_BRACES=14, OPEN_ANGULAR_BRACES=15, 
		CLOSE_ANGULAR_BRACES=16, OPEN_PARENTHESES=17, CLOSE_PARENTHESES=18, COMMA=19, 
		WITH_NAME=20, EQUALS=21, STRING_LITERAL=22, INTEGER_LITERAL=23, IDENTIFIER=24;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"SINGLE_LINE_COMMENT", "MULTI_LINE_COMMENT", "WHITESPACE", "GAME", "ACHIEVEMENT", 
		"OBJECTIVE", "CRITERION", "CATEGORY", "DESCRIPTION", "IMPORT", "STEAM", 
		"SEMICOLON", "OPEN_BRACES", "CLOSE_BRACES", "OPEN_ANGULAR_BRACES", "CLOSE_ANGULAR_BRACES", 
		"OPEN_PARENTHESES", "CLOSE_PARENTHESES", "COMMA", "WITH_NAME", "EQUALS", 
		"STRING_LITERAL", "INTEGER_LITERAL", "IDENTIFIER"
	};


	public PikaLangLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public PikaLangLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, null, null, null, "'game'", "'achievement'", "'objective'", "'criterion'", 
		"'category'", "'description'", "'import'", "'steam'", "';'", "'{'", "'}'", 
		"'<'", "'>'", "'('", "')'", "','", "'~>'", "'='"
	};
	private static readonly string[] _SymbolicNames = {
		null, "SINGLE_LINE_COMMENT", "MULTI_LINE_COMMENT", "WHITESPACE", "GAME", 
		"ACHIEVEMENT", "OBJECTIVE", "CRITERION", "CATEGORY", "DESCRIPTION", "IMPORT", 
		"STEAM", "SEMICOLON", "OPEN_BRACES", "CLOSE_BRACES", "OPEN_ANGULAR_BRACES", 
		"CLOSE_ANGULAR_BRACES", "OPEN_PARENTHESES", "CLOSE_PARENTHESES", "COMMA", 
		"WITH_NAME", "EQUALS", "STRING_LITERAL", "INTEGER_LITERAL", "IDENTIFIER"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "PikaLang.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override int[] SerializedAtn { get { return _serializedATN; } }

	static PikaLangLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static int[] _serializedATN = {
		4,0,24,196,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,
		6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,
		7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,
		7,21,2,22,7,22,2,23,7,23,1,0,1,0,1,0,1,0,5,0,54,8,0,10,0,12,0,57,9,0,1,
		0,1,0,1,1,1,1,1,1,1,1,5,1,65,8,1,10,1,12,1,68,9,1,1,1,1,1,1,1,1,1,1,1,
		1,2,4,2,76,8,2,11,2,12,2,77,1,2,1,2,1,3,1,3,1,3,1,3,1,3,1,4,1,4,1,4,1,
		4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,
		1,5,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,7,1,7,1,7,1,7,1,7,1,7,1,
		7,1,7,1,7,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,9,1,9,1,9,
		1,9,1,9,1,9,1,9,1,10,1,10,1,10,1,10,1,10,1,10,1,11,1,11,1,12,1,12,1,13,
		1,13,1,14,1,14,1,15,1,15,1,16,1,16,1,17,1,17,1,18,1,18,1,19,1,19,1,19,
		1,20,1,20,1,21,1,21,1,21,1,21,5,21,178,8,21,10,21,12,21,181,9,21,1,21,
		1,21,1,22,4,22,186,8,22,11,22,12,22,187,1,23,1,23,5,23,192,8,23,10,23,
		12,23,195,9,23,1,66,0,24,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,
		21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,22,
		45,23,47,24,1,0,6,1,0,10,10,2,0,9,10,32,32,2,0,10,10,39,39,1,0,48,57,2,
		0,48,57,97,122,3,0,48,57,95,95,97,122,202,0,1,1,0,0,0,0,3,1,0,0,0,0,5,
		1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,
		0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,
		1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,
		0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,1,49,
		1,0,0,0,3,60,1,0,0,0,5,75,1,0,0,0,7,81,1,0,0,0,9,86,1,0,0,0,11,98,1,0,
		0,0,13,108,1,0,0,0,15,118,1,0,0,0,17,127,1,0,0,0,19,139,1,0,0,0,21,146,
		1,0,0,0,23,152,1,0,0,0,25,154,1,0,0,0,27,156,1,0,0,0,29,158,1,0,0,0,31,
		160,1,0,0,0,33,162,1,0,0,0,35,164,1,0,0,0,37,166,1,0,0,0,39,168,1,0,0,
		0,41,171,1,0,0,0,43,173,1,0,0,0,45,185,1,0,0,0,47,189,1,0,0,0,49,50,5,
		47,0,0,50,51,5,47,0,0,51,55,1,0,0,0,52,54,8,0,0,0,53,52,1,0,0,0,54,57,
		1,0,0,0,55,53,1,0,0,0,55,56,1,0,0,0,56,58,1,0,0,0,57,55,1,0,0,0,58,59,
		6,0,0,0,59,2,1,0,0,0,60,61,5,47,0,0,61,62,5,42,0,0,62,66,1,0,0,0,63,65,
		9,0,0,0,64,63,1,0,0,0,65,68,1,0,0,0,66,67,1,0,0,0,66,64,1,0,0,0,67,69,
		1,0,0,0,68,66,1,0,0,0,69,70,5,42,0,0,70,71,5,47,0,0,71,72,1,0,0,0,72,73,
		6,1,0,0,73,4,1,0,0,0,74,76,7,1,0,0,75,74,1,0,0,0,76,77,1,0,0,0,77,75,1,
		0,0,0,77,78,1,0,0,0,78,79,1,0,0,0,79,80,6,2,0,0,80,6,1,0,0,0,81,82,5,103,
		0,0,82,83,5,97,0,0,83,84,5,109,0,0,84,85,5,101,0,0,85,8,1,0,0,0,86,87,
		5,97,0,0,87,88,5,99,0,0,88,89,5,104,0,0,89,90,5,105,0,0,90,91,5,101,0,
		0,91,92,5,118,0,0,92,93,5,101,0,0,93,94,5,109,0,0,94,95,5,101,0,0,95,96,
		5,110,0,0,96,97,5,116,0,0,97,10,1,0,0,0,98,99,5,111,0,0,99,100,5,98,0,
		0,100,101,5,106,0,0,101,102,5,101,0,0,102,103,5,99,0,0,103,104,5,116,0,
		0,104,105,5,105,0,0,105,106,5,118,0,0,106,107,5,101,0,0,107,12,1,0,0,0,
		108,109,5,99,0,0,109,110,5,114,0,0,110,111,5,105,0,0,111,112,5,116,0,0,
		112,113,5,101,0,0,113,114,5,114,0,0,114,115,5,105,0,0,115,116,5,111,0,
		0,116,117,5,110,0,0,117,14,1,0,0,0,118,119,5,99,0,0,119,120,5,97,0,0,120,
		121,5,116,0,0,121,122,5,101,0,0,122,123,5,103,0,0,123,124,5,111,0,0,124,
		125,5,114,0,0,125,126,5,121,0,0,126,16,1,0,0,0,127,128,5,100,0,0,128,129,
		5,101,0,0,129,130,5,115,0,0,130,131,5,99,0,0,131,132,5,114,0,0,132,133,
		5,105,0,0,133,134,5,112,0,0,134,135,5,116,0,0,135,136,5,105,0,0,136,137,
		5,111,0,0,137,138,5,110,0,0,138,18,1,0,0,0,139,140,5,105,0,0,140,141,5,
		109,0,0,141,142,5,112,0,0,142,143,5,111,0,0,143,144,5,114,0,0,144,145,
		5,116,0,0,145,20,1,0,0,0,146,147,5,115,0,0,147,148,5,116,0,0,148,149,5,
		101,0,0,149,150,5,97,0,0,150,151,5,109,0,0,151,22,1,0,0,0,152,153,5,59,
		0,0,153,24,1,0,0,0,154,155,5,123,0,0,155,26,1,0,0,0,156,157,5,125,0,0,
		157,28,1,0,0,0,158,159,5,60,0,0,159,30,1,0,0,0,160,161,5,62,0,0,161,32,
		1,0,0,0,162,163,5,40,0,0,163,34,1,0,0,0,164,165,5,41,0,0,165,36,1,0,0,
		0,166,167,5,44,0,0,167,38,1,0,0,0,168,169,5,126,0,0,169,170,5,62,0,0,170,
		40,1,0,0,0,171,172,5,61,0,0,172,42,1,0,0,0,173,179,5,39,0,0,174,178,8,
		2,0,0,175,176,5,92,0,0,176,178,5,39,0,0,177,174,1,0,0,0,177,175,1,0,0,
		0,178,181,1,0,0,0,179,177,1,0,0,0,179,180,1,0,0,0,180,182,1,0,0,0,181,
		179,1,0,0,0,182,183,5,39,0,0,183,44,1,0,0,0,184,186,7,3,0,0,185,184,1,
		0,0,0,186,187,1,0,0,0,187,185,1,0,0,0,187,188,1,0,0,0,188,46,1,0,0,0,189,
		193,7,4,0,0,190,192,7,5,0,0,191,190,1,0,0,0,192,195,1,0,0,0,193,191,1,
		0,0,0,193,194,1,0,0,0,194,48,1,0,0,0,195,193,1,0,0,0,8,0,55,66,77,177,
		179,187,193,1,6,0,0
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
} // namespace Pika.PikaLang
