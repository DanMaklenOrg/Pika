// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Pika.DataLayer;

#nullable disable

namespace Pika.DataLayer.Migrations
{
    [DbContext(typeof(PikaDataContext))]
    partial class PikaDataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("EntryDbModelObjectiveDbModel", b =>
                {
                    b.Property<Guid>("ParentObjectivesId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("RequiredEntriesId")
                        .HasColumnType("uuid");

                    b.HasKey("ParentObjectivesId", "RequiredEntriesId");

                    b.HasIndex("RequiredEntriesId");

                    b.ToTable("EntryDbModelObjectiveDbModel");
                });

            modelBuilder.Entity("Pika.DataLayer.Model.DomainDbModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("RootEntryId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("RootEntryId");

                    b.ToTable("Domains");
                });

            modelBuilder.Entity("Pika.DataLayer.Model.EntryDbModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("Entries");
                });

            modelBuilder.Entity("Pika.DataLayer.Model.ObjectiveDbModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("EntryId")
                        .HasColumnType("uuid");

                    b.Property<int>("RequiredCount")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EntryId");

                    b.ToTable("Objectives");
                });

            modelBuilder.Entity("EntryDbModelObjectiveDbModel", b =>
                {
                    b.HasOne("Pika.DataLayer.Model.ObjectiveDbModel", null)
                        .WithMany()
                        .HasForeignKey("ParentObjectivesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pika.DataLayer.Model.EntryDbModel", null)
                        .WithMany()
                        .HasForeignKey("RequiredEntriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Pika.DataLayer.Model.DomainDbModel", b =>
                {
                    b.HasOne("Pika.DataLayer.Model.EntryDbModel", "RootEntry")
                        .WithMany()
                        .HasForeignKey("RootEntryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RootEntry");
                });

            modelBuilder.Entity("Pika.DataLayer.Model.ObjectiveDbModel", b =>
                {
                    b.HasOne("Pika.DataLayer.Model.EntryDbModel", "Entry")
                        .WithMany("Objectives")
                        .HasForeignKey("EntryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Entry");
                });

            modelBuilder.Entity("Pika.DataLayer.Model.EntryDbModel", b =>
                {
                    b.Navigation("Objectives");
                });
#pragma warning restore 612, 618
        }
    }
}
